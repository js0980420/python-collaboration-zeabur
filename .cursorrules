# 🎓 Python 多人協作教學平台 - Cursor Rules 配置

## 📋 專案概述
這是一個基於 PHP + MySQL + XAMPP + WebSocket 的 Python 多人協作教學平台。
支援 2-3 人即時協作學習，具備完整的教學管理和學習追蹤功能。
所有開發過程需詳細記錄，作為客戶教學展示和系統交付的完整文檔。

## 🎯 專案目標

### 核心功能目標
- **多人協作學習**: 支援 2-3 人同時編輯 Python 代碼
- **即時同步**: WebSocket 實現毫秒級代碼同步
- **教學管理**: 教師房間管理、學生學習追蹤
- **雙重部署**: XAMPP 本地 + Zeabur 雲端部署
- **完整文檔**: 客戶交付包和技術文檔

### 客戶交付要求
- **即開即用**: 一鍵安裝腳本，無需複雜配置
- **跨平台**: Windows/Mac/Linux 全平台支援
- **雲端就緒**: Zeabur 一鍵雲端部署
- **文檔完整**: 用戶手冊、技術文檔、故障排除
- **技術支援**: 完整的支援和維護文檔

## 🏗️ 技術架構

### 核心技術棧
- **後端服務**: PHP 7.4+ (業務邏輯、用戶管理、API)
- **即時協作**: Node.js + WebSocket (代碼同步、聊天功能)
- **數據庫**: MySQL 8.0+ (用戶資料、學習記錄)
- **前端**: HTML5 + CSS3 + JavaScript + Bootstrap
- **協作引擎**: Operational Transformation (OT) 算法

### 部署架構
- **本地部署**: XAMPP (Apache + MySQL + PHP)
- **雲端部署**: Zeabur (自動化容器部署)
- **WebSocket 服務**: 獨立 Node.js 服務
- **檔案系統**: 代碼快照和學習記錄

## 🔧 開發規範

### 專案結構
```
PythonLearn Web/
├── php/                    # PHP 後端服務
│   ├── dashboard.php       # 教師控制台
│   ├── auto_logger.php     # 自動日誌記錄
│   └── change_tracker.php  # 修改追蹤系統
├── websocket_server/       # WebSocket 協作服務
│   ├── server.js           # 主服務器
│   ├── package.json        # Node.js 依賴
│   └── client/             # 客戶端程式庫
├── mysql/                  # 數據庫結構
├── docs/                   # 完整文檔系統
│   ├── project_overview.md # 專案概述
│   ├── system_architecture.md # 系統架構
│   ├── client_delivery_package.md # 客戶交付包
│   └── CHANGELOG.md        # 更新日誌
├── static/                 # 前端靜態資源
└── 快速測試腳本.bat        # 一鍵部署腳本
```

### WebSocket 協作功能規範
- **房間管理**: 每個學習房間獨立命名空間
- **衝突解決**: Operational Transformation 算法
- **消息格式**: JSON 結構化消息
- **心跳檢測**: 30秒間隔保持連接
- **斷線重連**: 自動重連機制
- **狀態同步**: 即時用戶狀態廣播

### 代碼品質標準
- **PHP 標準**: PSR-12 編碼規範
- **JavaScript 標準**: ES6+ 語法
- **數據庫**: 正規化設計，索引優化
- **安全性**: SQL 注入、XSS 防護
- **性能**: 響應時間 < 3 秒

## 📝 修改記錄要求

### 必須記錄的修改
- **WebSocket 功能**: 協作同步、衝突解決
- **PHP 後端**: API、認證、數據處理
- **前端互動**: 編輯器、聊天、界面
- **數據庫**: 表結構、查詢優化
- **部署配置**: XAMPP、Zeabur 設定
- **文檔更新**: 用戶手冊、技術文檔

### 記錄格式要求
```markdown
## [修改類型] - YYYY-MM-DD HH:MM:SS

### 🎯 修改目的
- 為什麼要進行這個修改
- 解決什麼問題或增加什麼功能

### 📁 影響檔案
- 列出所有修改的檔案
- 包含新增、修改、刪除的檔案

### 🔧 技術細節
- 具體的技術實現
- 關鍵代碼片段說明

### ✅ 測試結果
- 功能測試狀況
- 性能影響評估

### 📚 教學價值
- 這個修改對學習者的意義
- 可以教授的技術概念

### 🔗 相關文檔
- 更新的文檔檔案
- 相關參考資料
```

## 🎓 教學文檔標準

### 每個功能模組必須包含
1. **功能概述**: 簡潔的功能描述和使用場景
2. **技術實現**: 採用的技術和架構設計
3. **代碼解析**: 關鍵代碼的詳細解釋
4. **協作機制**: WebSocket 如何實現即時協作
5. **故障排除**: 常見問題和解決方案
6. **擴展方向**: 未來可能的改進建議

### 客戶文檔要求
- **用戶友好**: 非技術用戶也能理解
- **圖文並茂**: 截圖、流程圖、架構圖
- **步驟詳細**: 每個操作都有明確步驟
- **問題預防**: 預測可能遇到的問題
- **支援資訊**: 明確的聯繫方式和支援流程

## 🚀 部署和交付標準

### XAMPP 本地部署要求
- **一鍵安裝**: `快速測試腳本.bat` 自動化安裝
- **環境檢測**: 自動檢查 PHP、MySQL、Node.js 版本
- **數據初始化**: 自動創建數據庫和示例數據
- **服務啟動**: 自動啟動 Apache、MySQL、WebSocket 服務
- **狀態檢查**: 驗證所有服務正常運行

### Zeabur 雲端部署要求
- **配置檔案**: zeabur.json 自動化部署配置
- **環境變數**: 自動設置數據庫連接和服務配置
- **SSL 憑證**: 自動配置 HTTPS 加密
- **域名管理**: 支援自定義域名綁定
- **監控告警**: 服務健康檢查和異常通知

### 客戶交付檢查清單
- [ ] **核心功能完整**: 多人協作、即時同步、學習追蹤
- [ ] **部署方案就緒**: XAMPP 和 Zeabur 雙重部署
- [ ] **文檔系統完整**: 用戶手冊、技術文檔、API 文檔
- [ ] **安全機制健全**: 認證授權、數據加密、攻擊防護
- [ ] **性能達標**: 載入速度、同步延遲、並發處理
- [ ] **測試驗證**: 功能測試、相容性測試、壓力測試
- [ ] **支援準備**: 技術支援文檔、故障排除指南

## 🔍 協作功能測試標準

### WebSocket 連接測試
- **多人連接**: 2-3 人同時連接同一房間
- **即時同步**: 代碼修改的實時同步效果
- **衝突解決**: 同時編輯相同位置的處理
- **斷線重連**: 網路中斷後的自動重連
- **狀態一致性**: 所有用戶看到相同的最終狀態

### 協作編輯測試
- **光標同步**: 多用戶光標位置即時顯示
- **選擇範圍**: 文字選擇範圍的同步
- **操作歷史**: 編輯操作的順序和一致性
- **版本控制**: 代碼快照和版本追蹤
- **聊天功能**: 即時聊天和討論功能

## 📊 性能和監控標準

### 性能指標要求
- **頁面載入**: 首次載入 < 3 秒
- **WebSocket 延遲**: 同步延遲 < 100ms
- **數據庫查詢**: 複雜查詢 < 500ms
- **並發用戶**: 支援 50+ 同時在線用戶
- **記憶體使用**: 系統記憶體使用 < 80%

### 監控機制
- **系統資源**: CPU、記憶體、磁碟使用監控
- **服務狀態**: Apache、MySQL、Node.js 服務監控
- **用戶行為**: 登入、協作、學習行為追蹤
- **錯誤日誌**: 詳細的錯誤記錄和分析
- **性能分析**: 響應時間和瓶頸分析

## 🔒 安全要求

### 認證授權
- **JWT Token**: 安全的身份驗證機制
- **角色權限**: 教師、學生、管理員權限分離
- **會話管理**: 安全的會話控制和過期機制
- **密碼安全**: 強密碼政策和加密存儲

### 數據保護
- **輸入驗證**: 嚴格的用戶輸入驗證和清理
- **SQL 注入防護**: 預防 SQL 注入攻擊
- **XSS 防護**: 跨站腳本攻擊防護
- **CSRF 防護**: 跨站請求偽造防護
- **數據加密**: 敏感數據加密存儲

## 🎯 客戶支援準備

### 技術支援文檔
- **快速開始指南**: 新用戶 5 分鐘上手
- **常見問題解答**: 預期問題和標準答案
- **故障排除指南**: 系統性的問題診斷流程
- **API 參考文檔**: 完整的 API 接口文檔
- **擴展開發指南**: 客製化開發指引

### 維護和更新
- **版本更新**: 定期功能更新和安全修補
- **備份策略**: 數據備份和災難恢復方案
- **性能優化**: 持續的性能監控和優化
- **安全更新**: 及時的安全漏洞修補
- **功能擴展**: 根據客戶需求的功能擴展

---

## 📞 專案聯絡資訊

**📧 技術支援**: support@pythonteaching.com  
**📱 緊急聯絡**: +886-123-456-789  
**🌐 專案首頁**: https://github.com/your-repo/python-teaching-web  
**📚 文檔中心**: https://docs.pythonteaching.com  

**記住：每一行代碼都是教學的素材，每一個功能都是學習的機會！** 🚀 